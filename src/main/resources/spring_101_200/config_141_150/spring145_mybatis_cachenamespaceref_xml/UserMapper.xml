<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring_101_200.test_141_150.test_145_mybatis_cachenamespaceref_xml.UserMapper" >


    <cache type="com.spring_101_200.test_141_150.test_145_mybatis_cachenamespaceref_xml.MybatisPlusCache">
        <!--eviction(收回策略)
            LRU(最近最少使用的):移除最长时间不被使用的对象，这是默认值。
            FIFO(先进先出):按对象进入缓存的顺序来移除它们。
            SOFT(软引用):移除基于垃圾回收器状态和软引用规则的对象。
            WEAK(弱引用):更积极地移除基于垃圾收集器状态和弱引用规则的对象。
        -->
        <property name="eviction" value="LRU" />
        <!--flushinterval(刷新间隔)
            可以被设置为任意的正整数，而且它们代表一个合理的毫秒形式的时间段。默认情况不设置，即没有刷新间隔，缓存仅仅在调用语句时刷新。-->
        <property name="flushInterval" value="6000000" />
        <!--size(引用数目)
            可以被设置为任意正整数，要记住缓存的对象数目和运行环境的可用内存资源数目。默认值是1024 。-->
        <property name="size" value="1024" />
        <!--readOnly(只读)
            属性可以被设置为 true 或 false。只读的缓存会给所有调用者返回缓存对象的相同实例，因此这些对象不能被修改，这提供了很重要的性能优势。
            可读写的缓存会通过序列化返回缓存对象的拷贝，这种方式会慢一些，但是安全，因此默认是 false。-->
        <property name="readOnly" value="false" />
    </cache>


    <select id="getUser" parameterType="java.lang.Long" resultType="User">
            select * from lz_user where id=#{id}
    </select>

    <parameterMap id="parameterMap" type="User">
        <parameter property="id"></parameter>
        <parameter property="password"></parameter>
        <parameter property="realName"></parameter>
    </parameterMap>


    <!-- 通用查询映射结果 -->
    <resultMap id="UserBaseResultMap" type="User">
        <id column="id" property="id"/>
        <result column="is_delete" property="isDelete"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modified" property="gmtModified"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="real_name" property="realName"/>
        <result column="manager_id" property="managerId"/>
    </resultMap>


    <select id="getUserByParameterMap" parameterMap="parameterMap" resultType="User">
        select * from lz_user where id=#{id} or password=#{password} or real_name = #{realName}
    </select>


    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id AS id, is_delete AS isDelete, gmt_create AS gmtCreate, gmt_modified AS gmtModified, username AS username, password AS password, real_name AS realName, manager_id AS managerId, sex AS sex, sex_str AS sexStr
    </sql>




</mapper>
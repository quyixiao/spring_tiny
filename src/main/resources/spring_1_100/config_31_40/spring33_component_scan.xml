<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:oxm="http://www.springframework.org/schema/oxm"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--    @Repository : 用于对 Dao 实现类进行标注
      @Service : 用于对 Service 实现类进行标注
      @Controller: 用于对 Controller 实现类进行标注
       resource-pattern 属性的值为"**\//*.class" ,则 Spring 仅会扫描基本包子包中的类
       <context:component-scan>
           <context:include-filter type="regex" expression="com.baobaotao.anno*"/>
           <context:exclude-filter type="aspectj" expression="com.baobaotao..*Controller+" />
       </context:component-scan>
       <context:include-filter> 表示要包含的目标类，而<context:exclude-filter> 表示要排除在外的目标类，
       一个<context:component-scan> 下可以拥有若干个<context:exclude-filter> 和<context-includ-filter> 元素
       这两个过滤元素均支持多种类型的过滤表达式，说明如表4-7所示
       annotation ,com.baobaotao.Annotation ，所有标了XxxAnnotation的类，该类型采用目标类是否标了某个注解进行过虑
       assignable ,com.baobaotao.XxxService , 所有的类继承或者扩展XxxService的类，该类型采用目标类是否继承或者扩展
       某个特定类进行过滤
       aspectj , com.baobaotao..*Service+ ,所有类名以Service结束的类及继承或扩它们的类，参见第7章关于AspectJ 的内容
       ,类型采用AspectJ表达式进行过滤
       regex ,com.baobaotao.anno..*, 所有com.baobaotao.anno 类包下的类，该类型采用正式表达式根据目标类的类名进行过虑
       custom , com.baobaotao.XxxTypeFilter,采用XxxTypeFile 通过代码的方式根据过滤规则 ，该类必需实现
       org.springframework.core.type.TypeFilter接口

     -->
    <context:component-scan base-package="com.spring_1_100.test_31_40.test33_component_scan">
        <context:exclude-filter type="annotation" expression="com.spring_1_100.test_31_40.test33_component_scan.ExComponent"/>
    </context:component-scan>



</beans>